//==:对象是否相同
//equals:对象内容是否相同
class User{
	String name;
	String id;
	char sex;
	User(String name,String id,char sex){
		this.name=name;
		this.id=id;
		sex=sex;
	}
	
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	User(){
		name="小强";
		id="0102";
		sex='男';
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())//如果属于两个不同的类，则铁定不同
			return false;
		User other = (User) obj;//强制转型
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}	
	}
//super：访问父类中被子类覆盖的方法
